service: musical-waffle

plugins:
  - single-page-app
  - serverless-pseudo-parameters

custom:
  stage: ${opt:stage, self:provider.stage}
  defaultRootObject: index.html
  errorPagePath: /index.html
  distributionPath: build
  AcmCertificateArn: ${env:AWS_ACM_CERTIFICATE_ARN}

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2

resources:

  Parameters:
    Domain:
      Type: String
      Default: sourcier.uk
    EnvType:
      Type: String
      Default: ${self:custom.stage}
      AllowedValues:
        - prod
        - dev

  Conditions:
    IsProd: !Equals [ !Ref EnvType, prod ]

  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket

    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Statement:
            - Action: s3:GetObject
              Effect: Allow
              Resource: !Sub 'arn:aws:s3:::#{S3Bucket}/*'
              Principal:
                CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: !Ref S3Bucket

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          CustomErrorResponses:
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: ${self:custom.errorPagePath}

          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
            DefaultTTL: 3600
            MaxTTL: 86400
            MinTTL: 60
            ForwardedValues:
              Cookies:
                Forward: none
              QueryString: false
            TargetOriginId: s3origin
            ViewerProtocolPolicy: redirect-to-https

          DefaultRootObject: ${self:custom.defaultRootObject}

          Enabled: true

          HttpVersion: http2

          Origins:
            - DomainName: !GetAtt S3Bucket.RegionalDomainName
              Id: s3origin
              S3OriginConfig:
                OriginAccessIdentity: !Sub origin-access-identity/cloudfront/#{CloudFrontOriginAccessIdentity}

          ViewerCertificate:
            !If
              - IsProd
              - AcmCertificateArn: ${self:custom.AcmCertificateArn}
                SslSupportMethod: sni-only
                MinimumProtocolVersion: TLSv1.2_2018
              - CloudFrontDefaultCertificate: true

          Aliases:
            !If
              - IsProd
              - - !Ref Domain
              - !Ref "AWS::NoValue"


  Outputs:
    BucketName:
      Description: 'S3 Bucket Name'
      Value: !Ref S3Bucket

    DistributionId:
      Description: 'CloudFront Distribution ID'
      Value: !Ref CloudFrontDistribution

    Domain:
      Description: 'Cloudfront Domain'
      Value: !GetAtt CloudFrontDistribution.DomainName
